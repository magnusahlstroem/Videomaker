)
),
P = list(
first = list(
c(-0.35, 0, "l"), c(-0.35, 0.55, "l"),
c(-0.20, 0.55, "l"), c(-0.20, 0, "l"),
c(-0.35, 0, "l")
),
second = list(
c(-0.35, 0.4, "l"), c(0.05, 0.4, "cir", 0.05, 0.7),
c(0.35, 0.7, "l"), c(0.2, 0.7,"cir", 0.05, 0.7),
c(0.05, 0.55, "l"), c(-0.35, 0.55, "l"), c(-0.35,0.4)
),
third = list(
c(0.35, 0.7, "cir", 0.05, 0.7), c(0.05,1,"l"),
c(-0.35, 1, "l"), c(-0.35, 0.55, "l"),
c(-0.2,0.55, "l"), c(-0.2, 0.85, "l"),
c(0.05, 0.85, "cir", 0.05,0.7), c(0.2, 0.7, "l"),
c(0.35,0.7)
)
),
R = list(
first = list(
c(-0.35, 0, "l"), c(-0.35, 0.55, "l"),
c(0.1, 0.55, "l"), c(0.35, 0, "l"),
c(0.15, 0, "l"), c(-0.05, 0.4, "l"),
c(-0.2, 0.4 ,"l"), c(-0.2, 0.4, "l"),
c(-0.2,0, "l"), c(-0.35, 0)
),
second = list(
c(-0.35, 0.4, "l"), c(0.05, 0.4, "cir", 0.05, 0.7),
c(0.35, 0.7, "l"), c(0.2, 0.7,"cir", 0.05, 0.7),
c(0.05, 0.55, "l"), c(-0.35, 0.55, "l"), c(-0.35,0.4)
),
third = list(
c(0.35, 0.7, "cir", 0.05, 0.7), c(0.05,1,"l"),
c(-0.35, 1, "l"), c(-0.35, 0.55, "l"),
c(-0.2,0.55, "l"), c(-0.2, 0.85, "l"),
c(0.05, 0.85, "cir", 0.05,0.7), c(0.2, 0.7, "l"),
c(0.35,0.7)
)
),
S = list(
first = list(
c(-0.35, 0.25, "cir", 0, 0.37), c(0.35, 0.2499, "l"),
c(0.2, 0.25, "cir", 0, 0.37), c(-0.2, 0.2499, "l"),
c(-0.35, 0.25)
),
second = list(
c(0.35, 0.25, "cir", 0, (0.1175/0.6)), c(0, 0.55, "l"),
c(0, 0.45, "cir", 0, 0.25), c(0.2, 0.25, "l"), c(0.35,0.25)
),
third = list(
c(0, 0.45, "cir", 0, (1 - (0.1175/0.6))),
c(-0.35, 0.75, "l"), c(-0.2, 0.75, "cir", 0, 0.75),
c(0, 0.55)
),
fourth = list(
c(-0.35, 0.75, "cir", 0, 0.63), c(0.35, 0.7501, "l"),
c(0.2, 0.75, "cir", 0, 0.63), c(-0.2, 0.7501, "l"),
c(-0.35, 0.75)
)
),
T = list(
first = list(
c(-0.1, 0, "l"), c(0.1, 0, "l"),
c(0.1,0.85, "l"), c(0.35, 0.85, "l"),
c(0.35, 1, "l"), c(-0.35, 1, "l"),
c(-0.35, 0.85, "l"), c(-0.1, 0.85, "l"),
c(-0.1, 0, "l")
)
),
W = list(
first = list(
c(-0.46,1,"l"), c(-0.25,0,"l"),
c(-0.1,0,"l"), c(0,0.4,"l"),
c(0.1,0, "l"), c(0.25,0,"l"),
c(0.46,1,"l"), c(0.3,1,"l"),
c(0.15,0.2,"l"), c(0.05,0.6,"l"),
c(-0.05,0.6,"l"), c(-0.15,0.2,"l"),
c(-0.3,1,"l"), c(-0.46,1)
)
),
Y = list(
fist = list(
c(0.1, 0,"l"), c(0.1, 0.45, "l"),
c(0.4, 1, "l"), c(0.2,1, "l"),
c(0, 0.65, "l"), c(-0.2, 1, "l"),
c(-0.4, 1, "l"), c(-0.1, 0.45, "l"),
c(-0.1, 0, "l"), c(0.1,0)
)
),
Smiley1 = list(
first = list(
c(-0.48, 0.4, "cir", 0, 0.5), c(0.48, 0.4, "l"),
c(0.3, 0.4, "cir", 0, 0.6), c(-0.3, 0.4, "l"),
c(-0.48, 0.4)
),
second = list(
c(-0.48, 0.4, "cir", 0, 0.58), c(-0.5, 0.5, "l"),
c(0.5, 0.5, "cir", 0, 0.58), c(0.48, 0.4, "l"),
c(0.3,0.4, "cir", 0, 1.05), c(-0.3,0.4,"l"),
c(-0.48, 0.4)
),
third = list(
c(0.5, 0.5, "cir", 0, 0.5), c(0.4, 0.8, "l"),
c(0.3, 0.8, "cir", 0.2, 0.80001), c(0.1, 0.8, "l"),
c(-0.1, 0.8, "cir", -0.2, 0.80001), c(-0.3, 0.8, "l"),
c(-0.4, 0.8, "cir", 0, 0.5), c(-0.5, 0.5, "l"),
c(0.5,0.5)
),
fourth = list(
c(-0.4, 0.8, "cir", 0, 0.5), c(0.4, 0.8, "l"),
c(0.3, 0.8, "cir", 0.2, 0.7999), c(0.1, 0.8, "l"),
c(-0.1, 0.8, "cir", -0.2, 0.7999), c(-0.3, 0.8, "l"),
c(-0.4, 0.8)
)
)
)
result
}
plot(fillFrame2(cornerDots("K")), xlim = c(-0.5,0.5), pch = 46)
cornerDots <- function(Letter) {
result <- switch(Letter,
Q = list(
first = list(
c(0.3, 0.45, "cir", 0, 0.45),
c(0,0.15, "l"), c(0, 0, "cir", 0, 0.45),
c(0.45,0.45,"l"), c(0.45,0.55, "l"),
c(0.3,0.55, "l"), c(0.3, 0.45)
),
second = list(
c(0.45, 0.55, "cir", 0, 0.55), c(0,1,"l"),
c(0,0.85, "cir", 0, 0.55), c(0.3, 0.55, "l"),
c(0.45,0.55)),
third = list(
c(0, 1, "cir", 0, 0.55), c(-0.45, 0.55,"l"),
c(-0.3, 0.55, "cir", 0, 0.55), c(0, 0.85, "l"),
c(0, 1)
),
fourth = list(
c(-0.45, 0.55, "l"), c(-0.45,0.45, "cir", 0,0.45),
c(0, 0,"l"), c(0, 0.15, "cir", 0, 0.45),
c(-0.3, 0.45, "l"), c(-0.3, 0.55, "l"), c(-0.45, 0.55)
)
)
)
result
}
plot(fillFrame2(cornerDots("Q")), xlim = c(-0.5,0.5), pch = 46)
cornerDots <- function(Letter) {
result <- switch(Letter,
Q = list(
first = list(
c(0.3, 0.45, "cir", 0, 0.45),
c(0,0.15, "l"), c(0, 0, "cir", 0, 0.45),
c(0.45,0.45,"l"), c(0.45,0.55, "l"),
c(0.3,0.55, "l"), c(0.3, 0.45)
),
second = list(
c(0.45, 0.55, "cir", 0, 0.55), c(0,1,"l"),
c(0,0.85, "cir", 0, 0.55), c(0.3, 0.55, "l"),
c(0.45,0.55)),
third = list(
c(0, 1, "cir", 0, 0.55), c(-0.45, 0.55,"l"),
c(-0.3, 0.55, "cir", 0, 0.55), c(0, 0.85, "l"),
c(0, 1)
),
fourth = list(
c(-0.45, 0.55, "l"), c(-0.45,0.45, "cir", 0,0.45),
c(0, 0,"l"), c(0, 0.15, "cir", 0, 0.45),
c(-0.3, 0.45, "l"), c(-0.3, 0.55, "l"), c(-0.45, 0.55)
),
fifth = list(
c(0.45, 0, "l"), c(0.3, 0, "l"),
c(0.25, 0.15,"l"), c(0.3, 0.2, "l"),
c(0.45, 0)
)
)
)
result
}
plot(fillFrame2(cornerDots("Q")), xlim = c(-0.5,0.5), pch = 46)
test <- sample(1:1000, 10000)
test <- sample(1:1000, 10000, replace = T)
test
histogram(test)
hist(test)
hist(log(test))
exp(c(1,2,3,4,5,6,7))
exp(c(0,1,2,3,4,5,6,7))
seq(0,7,by = 0.5)
exp(seq(0,7,by = 0.5))
library(png)
img <- readPNG("H:/Dokumenter/Forskning/Studier/HIV_GFR_Creatinine/Submission_nephron/Til_Resubmission/Figures_and_Tables/Figure1.png")
img.r <- as.raster(img,interpolate=F)
img.r
jazz <- do.call(rbind, img.r)
jazz <- rbind(img.r)
jazz
jazz <- cbind(rbind(img.r))
jazz
unique(jazz)
img.r.black <- which(img.r == "#000000")
img.r.black <- sapply(img.r, function(x) t <- which(img.r == "#000000"); list(x,t))
img.r.black <- sapply(img.r, function(x) t <- which(img.r == "#000000");
list(x,t))
img.r.black <- sapply(img.r, function(x) t <- which(img.r == "#000000")
list(x, t))
img.r.black <- sapply(img.r, function(x)
{ t <- which(img.r == "#000000")
list(x, t) })
img.r
img.r.black
img.r[img.r.black]
jazz[img.r.black]
img.r[img.r.black]
which(img.r[,1] == "#000000")
which(img.r[,2] == "#000000")
which(img.r == "#000000")
sapply(img.r, sum)
img.r.black <- apply(img.r, 1, function(x)
{ t <- which(img.r == "#000000")
list(x, t) })
?apply
img.r.black <- apply(img.r, 2, function(x) {
t <- which(img.r == "#000000")
c(x, t) }
)
library(mitools)
mleuk <- read.csv2("http://biostat.ku.dk/~frank/data/mleuk.csv") %>%
mutate(death = as.numeric((status != 0)))
fit1 <- coxph(Surv(obstime, death) ~ mhc + gpd1 + virus, data = mleuk)
library(survival)
library(smcfcs)
mleuk <- read.csv2("http://biostat.ku.dk/~frank/data/mleuk.csv") %>%
mutate(death = as.numeric((status != 0)))
fit1 <- coxph(Surv(obstime, death) ~ mhc + gpd1 + virus, data = mleuk)
library(dplyr)
mleuk <- read.csv2("http://biostat.ku.dk/~frank/data/mleuk.csv") %>%
mutate(death = as.numeric((status != 0)))
fit1 <- coxph(Surv(obstime, death) ~ mhc + gpd1 + virus, data = mleuk)
img.r.black
img.r.black <- apply(img.r, 2, function(x) {
t <- which(x == "#000000")
c(x, t) }
)
img.r.black
img.r.black <- apply(img.r, 2, function(x) {
t <- which(x == "#000000")
c(t, x) }
)
img.r.black <- apply(img.r, 2, function(x) {
t <- which(x == "#000000")
t }
)
img.r.black
jazz <- sapply(seq_along(img.r.black) function(t) rep(t, length(t)), t)
jazz <- sapply(seq_along(img.r.black) function(t) matrix(rep(t, length(t)), t, ncol = 2))
jazz <- sapply(seq_along(img.r.black) function(t) matrix(c(rep(t, length(t)), t), ncol = 2))
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(rep(t, length(t)), t), ncol = 2))
jazz
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(rep(t, length(t)), img.r.black[[t]]), ncol = 2))
warnings
warnings()
jazz
jazz2 <- do.call(rbind, jazz)
plot(jazz2)
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(img.r.black[[t]], rep(t, length(t))), ncol = 2))
jazz2 <- do.call(rbind, jazz)
plot(jazz2)
plot(jazz2, pch = 46)
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(img.r.black[[t]], rep(t, length(img.r.black[[t]]))), ncol = 2))
jazz2 <- do.call(rbind, jazz)
plot(jazz2, pch = 46)
jazz <- sapply(seq_along(img.r.black), function(t) matrix(rep(t, length(img.r.black[[t]], c(img.r.black[[t]]))), ncol = 2))
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(rep(t, length(img.r.black[[t]])), img.r.black[[t]]), ncol = 2))
jazz2 <- do.call(rbind, jazz)
plot(jazz2, pch = 46)
library(mitools)
library(smcfcs)
library(dplyr)
mleuk <- read.csv2("http://biostat.ku.dk/~frank/data/mleuk.csv") %>%
mutate(death = as.numeric((status != 0)))
fit1 <- coxph(Surv(obstime, death) ~ mhc + gpd1 + virus, data = mleuk)
##2
mleuk2 <- select(mleuk, obstime, death, mhc, gpd1, virus) %>%
mutate_each(funs(factor), mhc, gpd1, virus) %>%
mutate(mis.gpd1 = ifelse(is.na(gpd1), 1, 0),
mis.vir = ifelse(is.na(virus), 1, 0))
fit.smcfcs <- smcfcs(mleuk2, m=25, smtype="coxph",
smformula="Surv(obstime, death) ~ mhc + gpd1 + virus",
method=c("", "", "logreg", "logreg", "logreg"))
impobj <- imputationList(fit.smcfcs$impDatasets)
models <- with(impobj, coxph(Surv(obstime, death) ~ mhc + gpd1 + virus))
mires <- MIcombine(models)
plot(survfit(Surv(obstime, death) ~ factor(mis.gpd1), data = mleuk2))
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c((-1)*rep(t, length(img.r.black[[t]])), img.r.black[[t]]), ncol = 2))
jazz2 <- do.call(rbind, jazz)
plot(jazz2, pch = 46)
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(rep(t, length(img.r.black[[t]])), -1*img.r.black[[t]]), ncol = 2))
jazz2 <- do.call(rbind, jazz)
plot(jazz2, pch = 46)
plot(jazz2, pch = 46, axes = 0)
plot(jazz2, pch = 46, axes = 0, xlab = "", ylab = "")
install.packages("riskRegression")
library(riskRegression)
bmt$donor <- factor(bmt$donor)
bmt$stage <- factor(bmt$stage)
csc1 <- CSC(Hist(time,event)~donor+stage, data=bmt)
csc1
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
?substr
img.r.black <- apply(img.r, 2, function(x) {
t <- which(as.numeric(substr(x, 2, 3)) <= 01 & as.numeric(substr(x, 4, 5)) <=  01 & as.numeric(substr(x, 6, 7)) <= 01)
t }
)
warnings()
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(rep(t, length(img.r.black[[t]])), -1*img.r.black[[t]]), ncol = 2))
jazz2 <- do.call(rbind, jazz)
plot(J)
plot(jazz2)
plot(jazz2, pch = 46)
img.r.black <- apply(img.r, 2, function(x) {
t <- which(as.numeric(substr(x, 2, 3)) <= 09 & as.numeric(substr(x, 4, 5)) <=  09 & as.numeric(substr(x, 6, 7)) <= 09)
t }
)
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(rep(t, length(img.r.black[[t]])), -1*img.r.black[[t]]), ncol = 2))
jazz2 <- do.call(rbind, jazz)
plot(jazz2, pch = 46)
impobj <- imputationList(fit.smcfcs$impDatasets)
models <- with(impobj, coxph(Surv(obstime, death) ~ mhc + gpd1 + virus))
mires <- MIcombine(models)
library(mitools)
library(smcfcs)
library(dplyr)
mleuk <- read.csv2("http://biostat.ku.dk/~frank/data/mleuk.csv") %>%
mutate(death = as.numeric((status != 0)))
fit1 <- coxph(Surv(obstime, death) ~ mhc + gpd1 + virus, data = mleuk)
##2
mleuk2 <- select(mleuk, obstime, death, mhc, gpd1, virus) %>%
mutate_each(funs(factor), mhc, gpd1, virus) %>%
mutate(mis.gpd1 = ifelse(is.na(gpd1), 1, 0),
mis.vir = ifelse(is.na(virus), 1, 0))
fit.smcfcs <- smcfcs(mleuk2, m=25, smtype="coxph",
smformula="Surv(obstime, death) ~ mhc + gpd1 + virus",
method=c("", "", "logreg", "logreg", "logreg"))
impobj <- imputationList(fit.smcfcs$impDatasets)
models <- with(impobj, coxph(Surv(obstime, death) ~ mhc + gpd1 + virus))
mires <- MIcombine(models)
mleuk2 <- select(mleuk, obstime, death, mhc, gpd1, virus) %>%
mutate_each(funs(factor), mhc, gpd1, virus) #%>%
#mutate(mis.gpd1 = ifelse(is.na(gpd1), 1, 0),
#       mis.vir = ifelse(is.na(virus), 1, 0))
fit.smcfcs <- smcfcs(mleuk2, m=25, smtype="coxph",
smformula="Surv(obstime, death) ~ mhc + gpd1 + virus",
method=c("", "", "logreg", "logreg", "logreg"))
impobj <- imputationList(fit.smcfcs$impDatasets)
models <- with(impobj, coxph(Surv(obstime, death) ~ mhc + gpd1 + virus))
mires <- MIcombine(models)
mires
img.r
?aply
?apply
apply(img.r, 2, function(t), t)
apply(img.r, 2, function(t) t)
apply(img.r, 2, function(t) list(t))
c.color <- do.call(c, apply(img.r, 2, function(t) list(t)))
unique.colors <- unique(c.color)
unique.colors
c.color <- do.call(c, apply(img.r, 2, function(t) list(t)))
c.color
c.color <- do.call("c", apply(img.r, 2, function(t) list(t)))
c.color
c
?c
c.color <- do.call(rbind, apply(img.r, 2, function(t) list(t)))
c.color
c.color <- do.call(c, apply(img.r, 2, function(t) list(t)))
c.color
unique.colors <- unique(unlist(c.color))
unique.colors
sample
?
sample
dt <- (x = sample(seq_along(unique.colors), length(unique.colors)), y = rep(1, length(unique.colors)), colors = unique.colors)
dt <- data.frame(x = sample(seq_along(unique.colors), length(unique.colors)), y = rep(1, length(unique.colors)), colors = unique.colors)
plot(dt$y ~ dt$x, col = dt$unique.colors)
plot(dt$y ~ dt$x, col = dt$unique.colors, type = "l")
plot(dt$y ~ dt$x, col = dt$unique.colors, type = "b")
plot(dt$y ~ dt$x)
apply(dt, 1, function(x) lines(x[,"y"] ~ x[,"x"], col = x[,"unique.colors"]))
plot(0,0)
for(i in seq_along(nrow(dt))) {
lines(dt[i,2] ~ dt[i,1], col = dt[i,3])
}
for(i in seq_along(nrow(dt))) {
lines(dt[i,2] ~ dt[i,1], col = dt[i,3], type = "l")
}
dt[i,1]
dt[i,]
for(i in seq_along(nrow(dt))) {
lines(dt[i,2] ~ dt[i,1], col = "#FFFFFF", type = "l")
}
plot(0,0, col = "#FFFFFF")
plot(0,0, col = "FFFFFF")
plot(0,0, col = "#000000")
plot(0,0, col = "#030B07")
plot(0,0, col = "#0066b6")
img.r.black <- apply(img.r, 2, function(x) {
t <- which(as.numeric(substr(x, 2, 3)) <= 29 & as.numeric(substr(x, 4, 5)) <=  29 & as.numeric(substr(x, 6, 7)) <= 29)
t }
)
apply(dt, 1, function(x) lines(x[,"y"] ~ x[,"x"], col = x[,"unique.colors"]))
apply(img.r, 2, function(t) t)
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(rep(t, length(img.r.black[[t]])), -1*img.r.black[[t]]), ncol = 2))
jazz2 <- do.call(rbind, jazz)
plot(jazz2, pch = 46)
img.r.black <- apply(img.r, 2, function(x) {
t <- which(as.numeric(substr(x, 2, 3)) <= 39 & as.numeric(substr(x, 4, 5)) <=  39 & as.numeric(substr(x, 6, 7)) <= 39)
t }
)
apply(dt, 1, function(x) lines(x[,"y"] ~ x[,"x"], col = x[,"unique.colors"]))
img.r.black <- apply(img.r, 2, function(x) {
t <- which(as.numeric(substr(x, 2, 3)) <= 39 & as.numeric(substr(x, 4, 5)) <=  39 & as.numeric(substr(x, 6, 7)) <= 39)
t }
)
apply(img.r, 2, function(t) t)
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(rep(t, length(img.r.black[[t]])), -1*img.r.black[[t]]), ncol = 2))
jazz2 <- do.call(rbind, jazz)
plot(jazz2, pch = 46, xlab = "", ylab = "")
sir.adm <- read.csv2("http://biostat.ku.dk/~frank/data/sir.adm.csv")
img.r.black <- which(img.r != "#FFFFFF")
img.r.black <- apply(img.r, 2, function(x) {
t <- which(as.numeric(substr(x, 2, 3)) <= 39 & as.numeric(substr(x, 4, 5)) <=  39 & as.numeric(substr(x, 6, 7)) <= 39)
t }
)
apply(img.r, 2, function(t) t)
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(rep(t, length(img.r.black[[t]])), -1*img.r.black[[t]]), ncol = 2))
jazz2 <- do.call(rbind, jazz)
img.r.black <- apply(img.r, 2, function(x) {
t <- which(img.r != "#FFFFFF")
t }
)
img.r.black <- apply(img.r, 2, function(x) {
t <- which(x != "#FFFFFF")
t }
)
apply(img.r, 2, function(t) t)
jazz <- sapply(seq_along(img.r.black), function(t) matrix(c(rep(t, length(img.r.black[[t]])), -1*img.r.black[[t]]), ncol = 2))
jazz2 <- do.call(rbind, jazz)
jazz2
plot(jazz2)
sir.adm
str(sir.adm)
sir.adm <- read.csv2("http://biostat.ku.dk/~frank/data/sir.adm.csv") %>%
mutate(pneu = factor(pneu))
fit1 <- coxph(Surv(time, status) ~ pneu, data = sir.adm)
fit1 <- coxph(Surv(time, status == 1) ~ pneu, data = sir.adm)
plot(survfit(Surv(time, status == 1) ~ pneu, data = sir.adm), "cumhaz")
plot(survfit(Surv(time, status == 1) ~ pneu, data = sir.adm), fun="cumhaz")
plot(survfit(Surv(time, status == 2) ~ pneu, data = sir.adm), fun="cumhaz")
plot(survfit(Surv(time, status == 2) ~ pneu, data = sir.adm), fun="cumhaz")
aj1 <- prodlim(Hist(time, event)~1, data=bmt) # Hist() instead of Surv()
par(mfrow=c(1,2))
plot(aj1, cause=1); title(main="Relapse") # Plot cause 1
plot(aj1, cause=2); title(main="Death in remisson") # Plot cause 2
library(prodlim)
aj1 <- prodlim(Hist(time, event)~1, data=bmt) # Hist() instead of Surv()
par(mfrow=c(1,2))
plot(aj1, cause=1); title(main="Relapse") # Plot cause 1
plot(aj1, cause=2); title(main="Death in remisson") # Plot cause 2
j1 <- prodlim(Hist(time, status) ~ pneu, data=sir.adm) # Hist() instead of Surv()
par(mfrow=c(1,2))
plot(aj1, cause=1); title(main="Relapse") # Plot cause 1
plot(aj1, cause=2); title(main="Death in remisson") # Plot cause 2
aj1 <- prodlim(Hist(time, status) ~ pneu, data=sir.adm) # Hist() instead of Surv()
par(mfrow=c(1,2))
plot(aj1, cause=1); title(main="Relapse") # Plot cause 1
plot(aj1, cause=2); title(main="Death in remisson") # Plot cause 2
aj1 <- prodlim(Hist(time, status) ~ pneu, data=sir.adm) # Hist() instead of Surv()
par(mfrow=c(1,2))
plot(aj1, cause=1); title(main="Mortality") # Plot cause 1
plot(aj1, cause=2); title(main="Discharge") # Plot cause 2
?Hist
?cpmrisk
cuminc
library(cmprsk)
cuminc()
plot(survfit(Surv(time, status == 1) ~ pneu, data = sir.adm))
plot(survfit(Surv(time, status == 2) ~ pneu, data = sir.adm))
aj1 <- prodlim(Hist(time, status) ~ pneu, data=sir.adm) # Hist() instead of Surv()
par(mfrow=c(1,2))
plot(aj1, cause=1); title(main="Mortality") # Plot cause 1
plot(aj1, cause=2); title(main="Discharge") # Plot cause 2
library(riskRegression)
str(sir.adm)
sessionInfo()
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(animation)
library(png)
library(dplyr)
setwd("H:/OOP_R/Videomaker")
setwd("Functions")
functions <- list.files()
lapply(functions, function(x) source(x))
setwd("..")
